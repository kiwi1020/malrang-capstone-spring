server:
  port: 8080
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5
  servlet:
    encoding:
      force-response: true
    error:
      whitelabel:
        enabled: false
      path: /error

spring:
  config:
    import: "optional:configserver:"
  application:
    name: malrang-service
    cloud:
      config:
        uri: http://localhost:8888
        request-connect-timeout: 5000 # 5s
        request-read-timeout: 5000 # 5s
        fail-fast: false # In production, set to true
        retry:
          max-attempts: 6
          initial-interval: 1000 # 1s
          max-interval: 2000 # 2s
          multiplier: 1.1
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${malrang-service.datasource.url:${DB_URL}}
    username: ${malrang-service.datasource.username:${DB_USERNAME}}
    password: ${malrang-service.datasource.password:${DB_PASSWORD}}
  data:
    redis:
      port: ${malrang-service.data.redis.port:${REDIS_PORT}}
      host: ${malrang-service.data.redis.host:${REDIS_HOST}}
      password: ${malrang-service.data.redis.password:${REDIS_PASSWORD}}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: create
      format_sql: true
      dialect: org.hibernate.dialect.MySQLDialect
    open-in-view: false

  profiles:
    include: oauth

management:
  endpoints:
    web:
      exposure:
        include: refresh

jwt:
  issuer: ${malrang-service.jwt.issuer:${JWT_ISSUER}}
  secret_key: ${malrang-service.jwt.secret_key:${JWT_SECRET_KEY}}

api-key:
  chat_gpt: ${malrang-service.api-key.chat_gpt:${CHAT_GPT_API_KEY}}

encrypt:
  key: V2k@7g#eQ3rL!mT9