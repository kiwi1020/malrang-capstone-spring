server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5
  servlet:
    encoding:
      force-response: true
  error:
    whitelabel:
      enabled: false
    path: /error

spring:
  config:
    import: "configserver:"
  application:
    name: malrang-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    config:
      uri: http://43.201.54.246:8888
      request-connect-timeout: 5000 # 5s
      request-read-timeout: 5000 # 5s
      fail-fast: true # In production, set to true
      retry:
        max-attempts: 6
        initial-interval: 1000 # 1s
        max-interval: 2000 # 2s
        multiplier: 1.1
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: ${malrang-service.datasource.url}
    url: jdbc:mysql://localhost:3306/test_db?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: ${malrang-service.datasource.username}
    password: ${malrang-service.datasource.password}

  data:
    redis:
      port: ${malrang-service.data.redis.port}
      host: ${malrang-service.data.redis.host}
      password: ${malrang-service.data.redis.password}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
        dialect.storage_engine: innodb

    open-in-view: false

  profiles:
    include: oauth

management:
  endpoints:
    web:
      exposure:
        include: refresh

jwt:
  issuer: ${malrang-service.jwt.issuer}
  secret_key: ${malrang-service.jwt.secret_key}

api-key:
  chat_gpt: ${malrang-service.api-key.chat_gpt}

encrypt:
  key: V2k@7g#eQ3rL!mT9